{"id":"index.js","dependencies":[{"name":"D:\\courses-projects\\angular ztm\\rxjs\\package.json","includedInParent":true,"mtime":1706469586588},{"name":"rxjs","loc":{"line":1,"column":36,"index":36},"parent":"D:\\courses-projects\\angular ztm\\rxjs\\src\\index.js","resolved":"D:\\courses-projects\\angular ztm\\rxjs\\node_modules\\rxjs\\dist\\esm5\\index.js"},{"name":"rxjs/operators","loc":{"line":2,"column":43,"index":88},"parent":"D:\\courses-projects\\angular ztm\\rxjs\\src\\index.js","resolved":"D:\\courses-projects\\angular ztm\\rxjs\\node_modules\\rxjs\\dist\\esm5\\operators\\index.js"},{"name":"rxjs/ajax","loc":{"line":3,"column":21,"index":128},"parent":"D:\\courses-projects\\angular ztm\\rxjs\\src\\index.js","resolved":"D:\\courses-projects\\angular ztm\\rxjs\\node_modules\\rxjs\\dist\\esm5\\ajax\\index.js"}],"generated":{"js":"\"use strict\";\n\nvar _rxjs = require(\"rxjs\");\nvar _operators = require(\"rxjs/operators\");\nvar _ajax = require(\"rxjs/ajax\");\n// the exhaustMap operator will ignore any incomming observables if there is any active observable\n// if the observable takes so long other observables will be ignored\n// may be used while submitting forms (useful to ignore duplicate submissions)\n\nvar button = document.querySelector('#btn');\nvar observable = (0, _rxjs.fromEvent)(button, 'click').pipe((0, _operators.exhaustMap)(function () {\n  return _ajax.ajax.getJSON('https://jsonplaceholder.typicode.com/todos/1');\n\n  // the interval operator is an example of memory leakage\n  // it will continue to log the value without completion\n  // if we press the button more than once this problem will compound\n  // the mergeMap operator has no limit to the number of the active operators\n  // we should always control the lifespan of the observable\n  // we can chain another pipe function here\n  // return interval(1000).pipe(\n  //     take(5),\n  //     tap({\n  //         complete() {\n  //             console.log('inner observable completed');\n  //         }\n  //     }),\n  // );\n})\n// this method will cause the outer observer as well as the inner observable to complete\n// if the button is clicked again after 5 values are printed nothing will happen now\n// if we need to complete the inner observable only we should move the take operator to the inside function\n// take(5)\n);\nvar subscription = observable.subscribe({\n  next: function next(value) {\n    console.log(value);\n  },\n  complete: function complete() {\n    console.log('complete');\n  }\n});\n\n// msg is emitted after values are emitted\nconsole.log('hello');"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":4},"source":"index.js","original":{"line":1,"column":0},"name":"_rxjs"},{"generated":{"line":3,"column":9},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":12},"source":"index.js","original":{"line":1,"column":0},"name":"require"},{"generated":{"line":3,"column":19},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":4,"column":0},"source":"index.js","original":{"line":2,"column":0}},{"generated":{"line":4,"column":4},"source":"index.js","original":{"line":2,"column":0},"name":"_operators"},{"generated":{"line":4,"column":14},"source":"index.js","original":{"line":2,"column":0}},{"generated":{"line":4,"column":17},"source":"index.js","original":{"line":2,"column":0},"name":"require"},{"generated":{"line":4,"column":24},"source":"index.js","original":{"line":2,"column":0}},{"generated":{"line":5,"column":0},"source":"index.js","original":{"line":3,"column":0}},{"generated":{"line":5,"column":4},"source":"index.js","original":{"line":3,"column":0},"name":"_ajax"},{"generated":{"line":5,"column":9},"source":"index.js","original":{"line":3,"column":0}},{"generated":{"line":5,"column":12},"source":"index.js","original":{"line":3,"column":0},"name":"require"},{"generated":{"line":5,"column":19},"source":"index.js","original":{"line":3,"column":0}},{"generated":{"line":6,"column":0},"source":"index.js","original":{"line":4,"column":0}},{"generated":{"line":7,"column":0},"source":"index.js","original":{"line":5,"column":0}},{"generated":{"line":8,"column":0},"source":"index.js","original":{"line":6,"column":0}},{"generated":{"line":10,"column":0},"source":"index.js","original":{"line":8,"column":0}},{"generated":{"line":10,"column":4},"source":"index.js","original":{"line":8,"column":6},"name":"button"},{"generated":{"line":10,"column":10},"source":"index.js","original":{"line":8,"column":12}},{"generated":{"line":10,"column":13},"source":"index.js","original":{"line":8,"column":15},"name":"document"},{"generated":{"line":10,"column":21},"source":"index.js","original":{"line":8,"column":23}},{"generated":{"line":10,"column":22},"source":"index.js","original":{"line":8,"column":24},"name":"querySelector"},{"generated":{"line":10,"column":35},"source":"index.js","original":{"line":8,"column":37}},{"generated":{"line":10,"column":36},"source":"index.js","original":{"line":8,"column":38}},{"generated":{"line":10,"column":42},"source":"index.js","original":{"line":8,"column":44}},{"generated":{"line":10,"column":43},"source":"index.js","original":{"line":8,"column":45}},{"generated":{"line":11,"column":0},"source":"index.js","original":{"line":9,"column":0}},{"generated":{"line":11,"column":4},"source":"index.js","original":{"line":9,"column":6},"name":"observable"},{"generated":{"line":11,"column":14},"source":"index.js","original":{"line":9,"column":16}},{"generated":{"line":11,"column":17},"source":"index.js","original":{"line":9,"column":19}},{"generated":{"line":11,"column":21},"source":"index.js","original":{"line":9,"column":19},"name":"fromEvent"},{"generated":{"line":11,"column":36},"source":"index.js","original":{"line":9,"column":28}},{"generated":{"line":11,"column":38},"source":"index.js","original":{"line":10,"column":4},"name":"button"},{"generated":{"line":11,"column":44},"source":"index.js","original":{"line":10,"column":10}},{"generated":{"line":11,"column":46},"source":"index.js","original":{"line":10,"column":12}},{"generated":{"line":11,"column":53},"source":"index.js","original":{"line":11,"column":0}},{"generated":{"line":11,"column":54},"source":"index.js","original":{"line":11,"column":1}},{"generated":{"line":11,"column":55},"source":"index.js","original":{"line":11,"column":2},"name":"pipe"},{"generated":{"line":11,"column":59},"source":"index.js","original":{"line":11,"column":6}},{"generated":{"line":11,"column":60},"source":"index.js","original":{"line":12,"column":4}},{"generated":{"line":11,"column":64},"source":"index.js","original":{"line":12,"column":4},"name":"exhaustMap"},{"generated":{"line":11,"column":85},"source":"index.js","original":{"line":12,"column":14}},{"generated":{"line":11,"column":87},"source":"index.js","original":{"line":12,"column":15}},{"generated":{"line":11,"column":99},"source":"index.js","original":{"line":12,"column":21}},{"generated":{"line":12,"column":2},"source":"index.js","original":{"line":13,"column":8}},{"generated":{"line":12,"column":9},"source":"index.js","original":{"line":13,"column":15},"name":"ajax"},{"generated":{"line":12,"column":19},"source":"index.js","original":{"line":13,"column":19}},{"generated":{"line":12,"column":20},"source":"index.js","original":{"line":13,"column":20},"name":"getJSON"},{"generated":{"line":12,"column":27},"source":"index.js","original":{"line":13,"column":27}},{"generated":{"line":12,"column":28},"source":"index.js","original":{"line":14,"column":12}},{"generated":{"line":12,"column":74},"source":"index.js","original":{"line":15,"column":8}},{"generated":{"line":12,"column":75},"source":"index.js","original":{"line":15,"column":9}},{"generated":{"line":14,"column":2},"source":"index.js","original":{"line":17,"column":8}},{"generated":{"line":15,"column":2},"source":"index.js","original":{"line":18,"column":8}},{"generated":{"line":16,"column":2},"source":"index.js","original":{"line":19,"column":8}},{"generated":{"line":17,"column":2},"source":"index.js","original":{"line":20,"column":8}},{"generated":{"line":18,"column":2},"source":"index.js","original":{"line":21,"column":8}},{"generated":{"line":19,"column":2},"source":"index.js","original":{"line":22,"column":8}},{"generated":{"line":20,"column":2},"source":"index.js","original":{"line":23,"column":8}},{"generated":{"line":21,"column":2},"source":"index.js","original":{"line":24,"column":8}},{"generated":{"line":22,"column":2},"source":"index.js","original":{"line":25,"column":8}},{"generated":{"line":23,"column":2},"source":"index.js","original":{"line":26,"column":8}},{"generated":{"line":24,"column":2},"source":"index.js","original":{"line":27,"column":8}},{"generated":{"line":25,"column":2},"source":"index.js","original":{"line":28,"column":8}},{"generated":{"line":26,"column":2},"source":"index.js","original":{"line":29,"column":8}},{"generated":{"line":27,"column":2},"source":"index.js","original":{"line":30,"column":8}},{"generated":{"line":28,"column":0},"source":"index.js","original":{"line":31,"column":4}},{"generated":{"line":28,"column":1},"source":"index.js","original":{"line":31,"column":5}},{"generated":{"line":29,"column":0},"source":"index.js","original":{"line":32,"column":4}},{"generated":{"line":30,"column":0},"source":"index.js","original":{"line":33,"column":4}},{"generated":{"line":31,"column":0},"source":"index.js","original":{"line":34,"column":4}},{"generated":{"line":32,"column":0},"source":"index.js","original":{"line":35,"column":4}},{"generated":{"line":33,"column":0},"source":"index.js","original":{"line":36,"column":0}},{"generated":{"line":33,"column":1},"source":"index.js","original":{"line":36,"column":1}},{"generated":{"line":34,"column":0},"source":"index.js","original":{"line":38,"column":0}},{"generated":{"line":34,"column":4},"source":"index.js","original":{"line":38,"column":6},"name":"subscription"},{"generated":{"line":34,"column":16},"source":"index.js","original":{"line":38,"column":18}},{"generated":{"line":34,"column":19},"source":"index.js","original":{"line":38,"column":21},"name":"observable"},{"generated":{"line":34,"column":29},"source":"index.js","original":{"line":38,"column":31}},{"generated":{"line":34,"column":30},"source":"index.js","original":{"line":38,"column":32},"name":"subscribe"},{"generated":{"line":34,"column":39},"source":"index.js","original":{"line":38,"column":41}},{"generated":{"line":34,"column":40},"source":"index.js","original":{"line":38,"column":42}},{"generated":{"line":35,"column":2},"source":"index.js","original":{"line":39,"column":4},"name":"next"},{"generated":{"line":35,"column":6},"source":"index.js","original":{"line":39,"column":8}},{"generated":{"line":35,"column":8},"source":"index.js","original":{"line":39,"column":10}},{"generated":{"line":35,"column":17},"source":"index.js","original":{"line":39,"column":10},"name":"next"},{"generated":{"line":35,"column":22},"source":"index.js","original":{"line":39,"column":11},"name":"value"},{"generated":{"line":35,"column":27},"source":"index.js","original":{"line":39,"column":16}},{"generated":{"line":35,"column":29},"source":"index.js","original":{"line":39,"column":21}},{"generated":{"line":36,"column":4},"source":"index.js","original":{"line":40,"column":8},"name":"console"},{"generated":{"line":36,"column":11},"source":"index.js","original":{"line":40,"column":15}},{"generated":{"line":36,"column":12},"source":"index.js","original":{"line":40,"column":16},"name":"log"},{"generated":{"line":36,"column":15},"source":"index.js","original":{"line":40,"column":19}},{"generated":{"line":36,"column":16},"source":"index.js","original":{"line":40,"column":20},"name":"value"},{"generated":{"line":36,"column":21},"source":"index.js","original":{"line":40,"column":25}},{"generated":{"line":36,"column":22},"source":"index.js","original":{"line":40,"column":26}},{"generated":{"line":37,"column":2},"source":"index.js","original":{"line":41,"column":4}},{"generated":{"line":37,"column":3},"source":"index.js","original":{"line":41,"column":5}},{"generated":{"line":38,"column":2},"source":"index.js","original":{"line":42,"column":4},"name":"complete"},{"generated":{"line":38,"column":10},"source":"index.js","original":{"line":42,"column":12}},{"generated":{"line":38,"column":12},"source":"index.js","original":{"line":42,"column":14}},{"generated":{"line":38,"column":21},"source":"index.js","original":{"line":42,"column":14},"name":"complete"},{"generated":{"line":38,"column":30},"source":"index.js","original":{"line":42,"column":14}},{"generated":{"line":38,"column":32},"source":"index.js","original":{"line":42,"column":20}},{"generated":{"line":39,"column":4},"source":"index.js","original":{"line":43,"column":8},"name":"console"},{"generated":{"line":39,"column":11},"source":"index.js","original":{"line":43,"column":15}},{"generated":{"line":39,"column":12},"source":"index.js","original":{"line":43,"column":16},"name":"log"},{"generated":{"line":39,"column":15},"source":"index.js","original":{"line":43,"column":19}},{"generated":{"line":39,"column":16},"source":"index.js","original":{"line":43,"column":20}},{"generated":{"line":39,"column":26},"source":"index.js","original":{"line":43,"column":30}},{"generated":{"line":39,"column":27},"source":"index.js","original":{"line":43,"column":31}},{"generated":{"line":40,"column":2},"source":"index.js","original":{"line":44,"column":4}},{"generated":{"line":41,"column":0},"source":"index.js","original":{"line":45,"column":0}},{"generated":{"line":41,"column":1},"source":"index.js","original":{"line":45,"column":1}},{"generated":{"line":41,"column":2},"source":"index.js","original":{"line":45,"column":2}},{"generated":{"line":43,"column":0},"source":"index.js","original":{"line":47,"column":0}},{"generated":{"line":44,"column":0},"source":"index.js","original":{"line":48,"column":0},"name":"console"},{"generated":{"line":44,"column":7},"source":"index.js","original":{"line":48,"column":7}},{"generated":{"line":44,"column":8},"source":"index.js","original":{"line":48,"column":8},"name":"log"},{"generated":{"line":44,"column":11},"source":"index.js","original":{"line":48,"column":11}},{"generated":{"line":44,"column":12},"source":"index.js","original":{"line":48,"column":12}},{"generated":{"line":44,"column":19},"source":"index.js","original":{"line":48,"column":19}},{"generated":{"line":44,"column":20},"source":"index.js","original":{"line":48,"column":20}}],"sources":{"index.js":"import { fromEvent, interval } from \"rxjs\";\r\nimport { map, exhaustMap, take, tap } from 'rxjs/operators';\r\nimport { ajax } from 'rxjs/ajax';\r\n// the exhaustMap operator will ignore any incomming observables if there is any active observable\r\n// if the observable takes so long other observables will be ignored\r\n// may be used while submitting forms (useful to ignore duplicate submissions)\r\n\r\nconst button = document.querySelector('#btn');\r\nconst observable = fromEvent(\r\n    button, 'click'\r\n).pipe(\r\n    exhaustMap(() => {\r\n        return ajax.getJSON(\r\n            'https://jsonplaceholder.typicode.com/todos/1'\r\n        )\r\n\r\n        // the interval operator is an example of memory leakage\r\n        // it will continue to log the value without completion\r\n        // if we press the button more than once this problem will compound\r\n        // the mergeMap operator has no limit to the number of the active operators\r\n        // we should always control the lifespan of the observable\r\n        // we can chain another pipe function here\r\n        // return interval(1000).pipe(\r\n        //     take(5),\r\n        //     tap({\r\n        //         complete() {\r\n        //             console.log('inner observable completed');\r\n        //         }\r\n        //     }),\r\n        // );\r\n    }),\r\n    // this method will cause the outer observer as well as the inner observable to complete\r\n    // if the button is clicked again after 5 values are printed nothing will happen now\r\n    // if we need to complete the inner observable only we should move the take operator to the inside function\r\n    // take(5)\r\n)\r\n\r\nconst subscription = observable.subscribe({\r\n    next: (value) => {\r\n        console.log(value);\r\n    },\r\n    complete: () => {\r\n        console.log('complete');\r\n    }\r\n})\r\n\r\n// msg is emitted after values are emitted\r\nconsole.log('hello');"},"lineCount":null}},"error":null,"hash":"2069561d0a5437b4567bd78a6f08519b","cacheData":{"env":{}}}